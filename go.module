<?php

/**
 * @file ./go.module
 *
 * @author Andy Truong
 * @author Quyen Bui
 * @author Thai Nguyen
 * @author Nguyen Tran
 *
 * Authors:
 *   - Auto loader: Andy Truong
 *   - Better formats: Nguyen Tran, Andy Truong
 *   - Google Analytics: Quyen, Andy Truong
 *   - 403/404 handler: Thai Nguyen
 */

use Drupal\go\Hook\Init as Hook_Init;
use Drupal\go\Hook\ElementInfoAlter as Hook_Element_Info_Alter;
use Drupal\go\Hook\FormAlter\SystemCronSettings as Hook_Form_Alter_SystemCronSettings;
use Drupal\go\Hook\FormAlter\UserProfile as Hook_Form_Alter_UserProfile;
use Drupal\go\Hook\Views\PreRender as Hook_Views_Pre_Render;
use Drupal\go\SEO\Page40x as SEO_Page40x;

/**
 * Implements hook_init().
 */
function go_init() {
  at_id(new Hook_Init())->execute();
}

/**
 * Implements of hook_element_info_alter().
 */
function go_element_info_alter(&$type) {
  if (at_valid('go_google_analytics')) {
    at_id(new Hook_Element_Info_Alter())->alter($type);
  }
}

/**
 * Implements hook_preprocess_page().
 */
function go_preprocess_page() {
  at_id(new SEO_Page40x())->execute();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function go_form_system_cron_settings_alter(&$form, $form_state) {
  return at_id(new Hook_Form_Alter_SystemCronSettings())
    ->alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function go_form_user_profile_form_alter(&$form, &$form_state) {
  if (at_valid('go_no_current_password')) {
    return at_id(new Hook_Form_Alter_UserProfile())->alter($form, $form_state);
  }
}

/**
 * Implements hook_view_pre_render().
 */
function go_views_pre_render(&$view) {
  at_id(new Hook_Views_Pre_Render($view))->execute();
}
